on: [push, pull_request]
name: Build
jobs:
  build:
    name: Example
    runs-on: ubuntu-latest
    steps:
      - name: Variable
        run: echo "::set-output name=DATE_NOW::$(date +'%d/%m/%Y')"
        id: ec2  
      - name: Check the date
        run: |
          echo ${{ steps.ec2.outputs.DATE_NOW }}
      - uses: actions/checkout@v2
        with: 
          path: './'
      - name: Json
        run: echo value=$(cat ./config.json | jq -r '.base_config[1].value')
      - name: Json output
        run: echo "::set-output name=JSON_NO::$(cat ./config.json | jq -r '.base_config[1].value')"
        id: json
      - name: Check json
        run: echo ${{ steps.json.outputs.JSON_NO }}


      - name: Split version code
        uses: xom9ikk/split@v1
        id: split
        with:
          string: ${{ steps.json.outputs.JSON_NO }}
          separator: .
          limit: -1
      - name: Some other action
        uses: xom9ikk/split@v1
        with:
          major: ${{ steps.split.outputs._0 }}
          minor: ${{ steps.split.outputs._1 }}
          patch: ${{ steps.split.outputs._2 }}
      - name: Add
        run: echo $(( ${{ steps.split.outputs._2 }} +1 ))
#       - name: check
#         run: |
#           echo value=$(cat ./config.json | jq -r '.base_config[1].value')
#       - name: new
#         run: echo "::set-output name=HARISH::2.3"
#         id: newjson
#       - name: Json
#         run: echo "::set-output name=JSON_NO::6.7"
#         id: json
#       - name: Json check
#         run: |
#           echo num=${{ steps.json.outputs.JSON_NO }}
#           echo gum=${{ steps.newjson.outputs.HARISH }}
#           echo $(( ${{ steps.json.outputs.JSON_NO }} + ${{ steps.newjson.outputs.HARISH }} ))
       
      - uses: actions/checkout@v2
        with: 
          path: './'      
      - run: |          
          echo "`jq '.base_config[0].value="Alpha-13"' ./config.json `" > ./config.json 
          echo "`jq '.base_config[1].value="${{ steps.split.outputs._0 }}.${{ steps.split.outputs._1 }}. ${{ steps.split.outputs._2 }} +1"' ./config.json `" > ./config.json 
          echo "`jq '.base_config[2].value="${{ steps.ec2.outputs.DATE_NOW }}"' ./config.json `" > ./config.json 
     
      - uses: EndBug/add-and-commit@v6
        with:
          message: 'Add the version and date'
          add: '*.json --force'
          cwd: './' 
          token: ${{ secrets.TOKEN }} 
        
